{"mappings":"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","sources":["node_modules/ol/src/events/EventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/TileState.js","node_modules/ol/src/util.js","node_modules/ol/src/easing.js","node_modules/ol/src/Tile.js","node_modules/ol/src/has.js","node_modules/ol/src/dom.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/extent.js","node_modules/ol/src/events.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/sphere.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/proj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/reproj.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/source/State.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/size.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/Feature.js","node_modules/ol/src/transform.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/control/MousePosition.js","node_modules/ol/src/control/ScaleLine.js","node_modules/ol/src/control/ZoomToExtent.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/interaction.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","src/index.ts"],"sourcesContent":["/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in desccending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type|Type[], listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return} CombinedOnSignature\n */\n\n/***\n * @typedef {import(\"./events\").EventsKey|Array<import(\"./events\").EventsKey>} OnReturn\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, OnReturn>}\n     */\n    this.on = this.onInternal;\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, OnReturn>}\n     */\n    this.once = this.onceInternal;\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, void>}\n     */\n    this.un = this.unInternal;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (!hasArea(size)) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string|boolean} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space\n * is rendered when the mouse leaves the viewport.  To render something else, provide a string\n * to be used as the text content (e.g. 'no position' or '' for an empty string).  Set the placeholder\n * to `false` to retain the last position when the mouse leaves the viewport.  In a future release, this\n * will be the default behavior.\n * @property {string} [undefinedHTML='&#160;'] This option is deprecated.  Use the `placeholder` option instead.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [opt_options] Mouse position options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @type {boolean}\n     * Change this to `false` when removing the deprecated `undefinedHTML` option.\n     */\n    let renderOnMouseOut = true;\n\n    /**\n     * @type {string}\n     */\n    let placeholder = '&#160;';\n\n    if ('undefinedHTML' in options) {\n      // deprecated behavior\n      if (options.undefinedHTML !== undefined) {\n        placeholder = options.undefinedHTML;\n      }\n      renderOnMouseOut = !!placeholder;\n    } else if ('placeholder' in options) {\n      if (options.placeholder === false) {\n        renderOnMouseOut = false;\n      } else {\n        placeholder = String(options.placeholder);\n      }\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = placeholder;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = renderOnMouseOut;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport ProjUnits from '../proj/Units.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport const Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us',\n};\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {import(\"./ScaleLine.js\").Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [opt_options] Scale line options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || Units.METRIC);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {import(\"./ScaleLine.js\").Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {import(\"./ScaleLine.js\").Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits =\n      units == Units.DEGREES ? ProjUnits.DEGREES : ProjUnits.METERS;\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == Units.DEGREES) {\n      const metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= minWidth) {\n        break;\n      }\n      ++i;\n    }\n    let html;\n    if (this.scaleBar_) {\n      html = this.createScaleBar(width, count, suffix);\n    } else {\n      html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n    }\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const mapScale =\n      '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n    const scaleSteps = [];\n    const stepWidth = width / this.scaleBarSteps_;\n    let backgroundColor = '#ffffff';\n    for (let i = 0; i < this.scaleBarSteps_; i++) {\n      if (i === 0) {\n        // create the first marker at position 0\n        scaleSteps.push(this.createMarker('absolute', i));\n      }\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          'class=\"ol-scale-singlebar\" ' +\n          'style=' +\n          '\"width: ' +\n          stepWidth +\n          'px;' +\n          'background-color: ' +\n          backgroundColor +\n          ';\"' +\n          '>' +\n          '</div>' +\n          this.createMarker('relative', i) +\n          /*render text every second step, except when only 2 steps */\n          (i % 2 === 0 || this.scaleBarSteps_ === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n      if (i === this.scaleBarSteps_ - 1) {\n        {\n          /*render text at the end */\n        }\n        scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n      }\n      // switch colors of steps between black and white\n      if (backgroundColor === '#ffffff') {\n        backgroundColor = '#000000';\n      } else {\n        backgroundColor = '#ffffff';\n      }\n    }\n\n    let scaleBarText;\n    if (this.scaleBarText_) {\n      scaleBarText =\n        '<div ' +\n        'class=\"ol-scale-text\" ' +\n        'style=\"width: ' +\n        width +\n        'px;\">' +\n        mapScale +\n        '</div>';\n    } else {\n      scaleBarText = '';\n    }\n    const container =\n      '<div ' +\n      'style=\"display: flex;\">' +\n      scaleBarText +\n      scaleSteps.join('') +\n      '</div>';\n    return container;\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {string} position The position, absolute or relative\n   * @param {number} i The iterator\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position, i) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      'style=\"position: ' +\n      position +\n      ';' +\n      'top: ' +\n      top +\n      'px;\"' +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      'margin-left: ' +\n      margin +\n      'px;' +\n      'text-align: ' +\n      (i === 0 ? 'left' : 'center') +\n      '; ' +\n      'min-width: ' +\n      minWidth +\n      'px;' +\n      'left: ' +\n      (isLast ? width + 'px' : 'unset') +\n      ';\"' +\n      '>' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const mpu = this.viewState_.projection.getMetersPerUnit();\n    const inchesPerMeter = 1000 / 25.4;\n    return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../Observable\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../Observable\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    const displacement = this.getDisplacement();\n    this.canvas_ = {};\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n          geometry\n        ).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n          geometry\n        ).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_ === VOID ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","import 'ol/ol.css';\nimport { OSM } from 'ol/source';\nimport { Map, View, Feature, MapBrowserEvent } from 'ol';\nimport { MousePosition, ScaleLine, ZoomToExtent, defaults } from 'ol/control';\nimport { Coordinate, createStringXY } from 'ol/coordinate';\nimport { Geometry, LineString, Point } from 'ol/geom'\nimport { Tile , Vector } from 'ol/layer';\nimport VectorSource from 'ol/source/Vector';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport { getDistance } from 'ol/sphere';\nimport { Style, Stroke, Circle, Fill} from 'ol/style';\n\ninterface ExportOptions {\n  name: string;\n  bogusTime: boolean;\n  start?: Date;\n}\n\ninterface MapDataPoint {\n  point: Point;\n  data: DataPoint;\n}\n\ninterface DataPoint {\n  distance: number;\n  totalDistance: number;\n}\n\nconst EDITOR_LINE_STYLE = new Style({\n  stroke: new Stroke({\n    color: '#ff0000',\n    width:3\n  })\n});\nconst EDITOR_POINTS_STYLE = new Style({\n  image: new Circle({\n    radius:5,\n    fill: new Fill({\n      color: '#ffffff'\n    }),\n    stroke: new Stroke({\n      color: '#ff0000',\n      width:2\n    })\n  })\n});\nconst EDITOR_POINTS_PREVIOUS_STYLE = new Style({\n  image: new Circle({\n    radius:5,\n    fill: new Fill({\n      color: '#00ff00'\n    }),\n    stroke: new Stroke({\n      color: '#ff0000',\n      width:2\n    })\n  })\n});\nexport class RouteMaker {\n\n  routeLayerSource = new VectorSource({wrapX: true});\n  selectedLayerSource = new VectorSource({wrapX: true});\n  editorLineLayerSource = new VectorSource({wrapX: true});\n  editorPointsLayerSource = new VectorSource({wrapX: true});\n\n\n  editorLineFeature: Feature<LineString> = new Feature<LineString>({geometry: new LineString([])});\n  editorPoints: MapDataPoint[];\n  previousPointIndex: number;\n\n  draggingPointIndex: number;\n  map: Map;\n  constructor() {\n    let mapSource = new OSM();\n    let ele = document.createElement('div');\n    ele.textContent = 'abc';\n\n    this.map = new Map({\n      target: 'map',\n      controls: defaults().extend([\n        new MousePosition({\n          coordinateFormat: createStringXY(5),\n          projection: 'EPSG:4326',\n        }),\n        new ScaleLine(),\n        new ZoomToExtent(),\n      ]),\n      layers: [\n        new Tile({source: mapSource}),\n        new Vector({ source: this.routeLayerSource}),\n        new Vector({ source: this.selectedLayerSource}),\n        new Vector({ source: this.editorLineLayerSource}),\n        new Vector({ source: this.editorPointsLayerSource})\n      ],\n      view: new View({\n        center: fromLonLat([-121.961, 37.55]),\n        zoom: 16,\n      }),\n    });\n    this.editorLineFeature.setStyle(EDITOR_LINE_STYLE);\n    this.editorLineLayerSource.addFeature(this.editorLineFeature);\n\n    this.resetEditor();\n    this.initEditor();\n\n    this.setInteractions();\n  }\n\n  private resetEditor() {\n    this.editorPoints = [];\n    this.previousPointIndex = -1;\n    this.draggingPointIndex = null;\n    this.updateDisplay();\n  }\n\n  private setInteractions() {\n    let controlInteractions = {\n      editor: {\n        click: (e: MapBrowserEvent<MouseEvent>) => {\n          let coordinate = e.coordinate;\n          if(e.originalEvent.ctrlKey) {\n            this.map.forEachFeatureAtPixel(e.pixel, (f) => {\n              if(this.editorPointsLayerSource.hasFeature(f as Feature<Geometry>)) {\n                coordinate = (<Point> f.getGeometry()).getCoordinates();\n                return true;\n              }\n            });\n          }\n          this.addPoint(coordinate);\n        },\n        dblclick: (e: MapBrowserEvent<MouseEvent>) => {\n          e.stopPropagation();\n        },\n        rightclick: (e: MapBrowserEvent<MouseEvent>) => {\n          this.removePreviousPoint();\n        },\n        pointerdown: (e: MapBrowserEvent<MouseEvent>) => {\n          if(!e.originalEvent.ctrlKey) { // ctrlKey to allow adding point on another point\n            this.map.forEachFeatureAtPixel(e.pixel, (f) => {\n              if(this.editorPointsLayerSource.hasFeature(f as Feature<Geometry>)) {\n                this.previousPointIndex = this.editorPoints.findIndex(item => item.point === <Point> f.getGeometry());\n                this.draggingPointIndex = this.previousPointIndex;\n                this.setPreviousPointStyle();\n                return true;\n              }\n            });\n          }\n        },\n        pointerup: (e: MapBrowserEvent<MouseEvent>) => {\n          if(this.draggingPointIndex != null) {\n            e.preventDefault();\n            this.draggingPointIndex = null;\n          }\n        },\n        pointerdrag: (e: MapBrowserEvent<MouseEvent>) => {\n          if(this.draggingPointIndex != null) {\n            e.stopPropagation();\n            let coordinate = e.coordinate;\n            if(e.originalEvent.ctrlKey) {\n              this.map.forEachFeatureAtPixel(e.pixel, (f) => {\n                if(this.editorPointsLayerSource.hasFeature(f as Feature<Geometry>) && <Point> f.getGeometry() !== this.editorPoints[this.draggingPointIndex].point) {\n                  coordinate = (<Point> f.getGeometry()).getCoordinates();\n                  return true;\n                }\n              });\n            }\n            this.moveDraggingPoint(coordinate);\n          }\n        }\n      }\n    }\n    this.map.on('click', (e: MapBrowserEvent<MouseEvent>) => {\n      controlInteractions.editor.click?.(e);\n    });\n    this.map.on('dblclick', (e: MapBrowserEvent<MouseEvent>) => {\n      controlInteractions.editor.dblclick?.(e);\n    });\n    this.map.on(<any> 'contextmenu', (e: MapBrowserEvent<MouseEvent>) => {\n      e.preventDefault();\n      controlInteractions.editor.rightclick?.(e);\n    });\n    this.map.on(<any> 'pointerdown', (e: MapBrowserEvent<MouseEvent>) => {\n      controlInteractions.editor.pointerdown?.(e);\n    });\n    this.map.on(<any> 'pointerup', (e: MapBrowserEvent<MouseEvent>) => {\n      controlInteractions.editor.pointerup?.(e);\n    });\n    this.map.on('pointerdrag', (e: MapBrowserEvent<MouseEvent>) => {\n      controlInteractions.editor.pointerdrag?.(e);\n    });\n  }\n\n  /**\n   * Update the total distances of points from a starting index. Assumes that `distance` is correct for all data\n   * @param index the index of the last point with a correct `totalDistance`\n   */\n  private updateTotalDistances(index: number) {\n    for(let i = index + 1; i < this.editorPoints.length; ++i) {\n      const dataPoint = this.editorPoints[i].data;\n      dataPoint.totalDistance = (this.editorPoints[i-1]?.data.totalDistance || 0) + dataPoint.distance;\n    }\n  }\n\n  /**\n   * Add a point at `previousPointIndex` at a location\n   * @param coordinate \n   * @param render whether to render the path update\n   */\n  private addPoint(coordinate: Coordinate, render = true) {\n    let point = new Point(coordinate);\n    let distance = 0;\n    let totalDistance = 0;\n\n    let nextPointDistance: number;\n    if(this.previousPointIndex !== -1) {\n      const mapDataPoint = this.editorPoints[this.previousPointIndex];\n      distance = getDistance(toLonLat(mapDataPoint.point.getCoordinates()), toLonLat(coordinate));\n      totalDistance = mapDataPoint.data.totalDistance + distance;\n\n      if(this.previousPointIndex < this.editorPoints.length - 1) {\n        nextPointDistance = getDistance(toLonLat(coordinate), toLonLat(this.editorPoints[this.previousPointIndex+1].point.getCoordinates()));\n        this.editorPoints[this.previousPointIndex+1].data.distance = nextPointDistance;\n      }\n    }\n    this.editorPoints.splice(this.previousPointIndex + 1, 0,\n      { \n        point: point, \n        data: {\n          distance: distance,\n          totalDistance: totalDistance\n        }\n      }\n    );\n    this.previousPointIndex += 1;\n    this.updateTotalDistances(this.previousPointIndex);\n    if(render) {\n      this.updateDisplay();\n    }\n  }\n\n  /**\n   * Remove a point at `previousPointIndex`\n   * @param render whether to render the path update\n   */\n  private removePreviousPoint(render = true) {\n    if(this.previousPointIndex > 0) {\n      this.editorPoints.splice(this.previousPointIndex, 1);\n      const mapDataPoint = this.editorPoints[this.previousPointIndex];\n      if(this.previousPointIndex < this.editorPoints.length) {\n        mapDataPoint.data.distance = getDistance(toLonLat(this.editorPoints[this.previousPointIndex-1].point.getCoordinates()), toLonLat(mapDataPoint.point.getCoordinates()));\n      }\n      this.previousPointIndex -= 1;\n      this.updateTotalDistances(this.previousPointIndex);\n    }\n    else if(this.previousPointIndex === 0) {\n      this.editorPoints.shift();\n      if(!this.editorPoints.length) {\n        this.previousPointIndex = -1;\n      }\n      else {\n        this.editorPoints[this.previousPointIndex].data.distance = 0;\n        this.updateTotalDistances(-1);\n      }\n    }\n    if(render) {\n      this.updateDisplay();\n    }\n  }\n\n  /**\n   * Move the point at `draggingPointIndex` to a new location\n   * @param coordinate \n   * @param render whether to render the path update\n   */\n  private moveDraggingPoint(coordinate: Coordinate, render = true) {\n    const mapDataPoint = this.editorPoints[this.draggingPointIndex];\n    mapDataPoint.point.setCoordinates(coordinate);\n    if(this.draggingPointIndex !== 0) {\n      const previousMapDataPoint = this.editorPoints[this.draggingPointIndex-1]\n      mapDataPoint.data.distance = getDistance(toLonLat(previousMapDataPoint.point.getCoordinates()), toLonLat(coordinate));\n      mapDataPoint.data.totalDistance = previousMapDataPoint.data.totalDistance + mapDataPoint.data.distance;\n    }\n    if(this.draggingPointIndex < this.editorPoints.length - 1) {\n      const nextMapDataPoint = this.editorPoints[this.draggingPointIndex+1];\n      nextMapDataPoint.data.distance = getDistance(toLonLat(mapDataPoint.point.getCoordinates()), toLonLat(nextMapDataPoint.point.getCoordinates()));\n    }\n    this.updateTotalDistances(this.draggingPointIndex);\n    if(render) {\n      this.updateDisplay();\n    }\n  }\n\n  /**\n   * Update all visual content\n   */\n  private updateDisplay() {\n    this.setEditorPath(this.editorPoints);\n    this.setPreviousPointStyle();\n    this.setDistanceText();\n  }\n\n  private setEditorPath(points: MapDataPoint[]) {\n    let coords = this.editorPoints.map(item => item.point.getCoordinates());\n    this.editorLineFeature.getGeometry().setCoordinates(coords);\n    this.editorPointsLayerSource.clear();\n    this.editorPointsLayerSource.addFeatures(\n      this.editorPoints.map(item => {\n        let feature = new Feature({geometry: item.point});\n        feature.setStyle(EDITOR_POINTS_STYLE);\n        return feature;\n      })\n    );\n  }\n\n  private setPreviousPointStyle() {\n    this.editorPointsLayerSource.forEachFeature((f: Feature<Geometry>) => {\n      if(<Point> f.getGeometry() === this.editorPoints[this.previousPointIndex].point)\n        f.setStyle(EDITOR_POINTS_PREVIOUS_STYLE);\n      else if(f.getStyle() !== EDITOR_POINTS_STYLE)\n        f.setStyle(EDITOR_POINTS_STYLE);\n    });\n  }\n\n  private setDistanceText() {\n    const distance = this.editorPoints[this.editorPoints.length-1]?.data.totalDistance || 0;\n    document.getElementById('distance-km').textContent = (distance/1000).toString();\n    document.getElementById('distance-miles').textContent = (distance/1609.344).toString();\n  }\n\n  public reversePath() {\n    const reversed: MapDataPoint[] = [];\n    for(let i = this.editorPoints.length - 1; i >= 0; --i) {\n      reversed.push(this.editorPoints[i]);\n    }\n    reversed[0].data.distance = 0;\n    reversed[0].data.totalDistance = 0;\n    for(let i = 1; i < reversed.length; ++i) {\n      const previousMapDataPoint = reversed[i-1];\n      const mapDataPoint = reversed[i];\n      mapDataPoint.data.distance = getDistance(toLonLat(previousMapDataPoint.point.getCoordinates()), toLonLat(mapDataPoint.point.getCoordinates()));\n      mapDataPoint.data.totalDistance = previousMapDataPoint.data.totalDistance + mapDataPoint.data.distance;\n    }\n    this.editorPoints = reversed;\n    this.previousPointIndex = this.editorPoints.length - 1 - this.previousPointIndex;\n    this.updateDisplay();\n  }\n\n  private initEditor() {\n    this.editorPoints = [];\n    this.previousPointIndex = -1;\n  }\n\n  private cancelEditor(): boolean {\n    this.resetEditor();\n    return true;\n  }\n\n  public loadGPX(fileContents: string) {\n    const domParser = new DOMParser();\n    const xmlDoc = domParser.parseFromString(fileContents, 'text/xml');\n    const name = xmlDoc.getElementsByTagName('metadata')[0]?.getElementsByTagName('name')[0]?.textContent;\n    const formElement = document.getElementById('export') as HTMLFormElement;\n\n    const oldPoints = this.editorPoints;\n    const oldPreviousPointIndex = this.previousPointIndex;\n    const oldName: string = formElement.elements['name'].value;\n    try {\n      this.resetEditor();\n      for(const trkpt of xmlDoc.getElementsByTagName('trkpt')) {\n        this.addPoint(\n          fromLonLat([parseFloat(trkpt.getAttribute('lon')), parseFloat(trkpt.getAttribute('lat'))]),\n          false\n        );\n      }\n  \n      formElement.elements['name'].value = name;\n  \n      this.updateDisplay();\n      this.map.getView().fit(this.editorLineLayerSource.getExtent()); \n    }\n    catch(error) {\n      this.editorPoints = oldPoints;\n      this.previousPointIndex = oldPreviousPointIndex;\n      formElement.elements['name'].value = oldName;\n      this.updateDisplay();\n      alert('File import failed');\n    }\n  }\n\n  public createGPX(options: ExportOptions): string {\n    const timeRegex = /(.*)\\..*?Z/;\n\n    const xmlDoc = document.implementation.createDocument(null, 'gpx', null);\n    const gpxElement: Element = xmlDoc.documentElement;\n    let time = options.start || new Date();\n    time.setMilliseconds(0);\n    if(options.bogusTime) {\n      gpxElement\n        .appendChild(xmlDoc.createElement('metadata'))\n        .appendChild(xmlDoc.createElement('time'))\n        .textContent = time.toISOString().match(timeRegex)[1]+'Z';\n    }\n    const trkElement: Element = gpxElement.appendChild(xmlDoc.createElement('trk'));\n    trkElement.appendChild(xmlDoc.createElement('name')).textContent = options.name;\n    if(options.bogusTime) {\n      trkElement.appendChild(xmlDoc.createElement('type')).textContent = '9';\n    }\n    const trksegElement: Element = trkElement.appendChild(xmlDoc.createElement('trkseg'));\n    for(const mapDataPoint of this.editorPoints) {\n      const trkptElement: Element = trksegElement.appendChild(xmlDoc.createElement('trkpt'));\n      const coordinates = toLonLat(mapDataPoint.point.getCoordinates());\n      trkptElement.setAttribute('lat', coordinates[1].toString());\n      trkptElement.setAttribute('lon', coordinates[0].toString());\n      if(options.bogusTime) {\n        const seconds = Math.ceil(mapDataPoint.data.distance); // at most 1 m/s\n        time = new Date(time.getTime() + seconds*1000);\n        trkptElement.appendChild(xmlDoc.createElement('time'))\n          .textContent = time.toISOString().match(timeRegex)[1]+'Z';\n      }\n    }\n    return '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' + new XMLSerializer().serializeToString(xmlDoc);\n  }\n\n}\n\nconst app = new RouteMaker();\n\ndocument.getElementById('reverse').addEventListener('click', () => {\n  app.reversePath();\n});\n\ndocument.getElementById('import').addEventListener('click', () => {\n  document.getElementById('import-input').click();\n});\n\nconst importInput = document.getElementById('import-input') as HTMLInputElement;\nimportInput.addEventListener('change', (event) =>{\n  const reader = new FileReader();\n  reader.onload = event => {\n    app.loadGPX(event.target.result as string);\n  };\n  reader.readAsText((<HTMLInputElement> event.target).files[0]);\n});\n\nconst formElement = document.getElementById('export') as HTMLFormElement;\nformElement.addEventListener('submit', (ev: Event) => {\n  const options: ExportOptions = {\n    bogusTime: formElement.elements['bogus-time'].checked as boolean,\n    start: formElement.elements['start'].value ? new Date(formElement.elements['start'].value) : null,\n    name: formElement.elements['name'].value as string,\n  };\n  console.log(options);\n\n  const blob = new Blob([app.createGPX(options)], {type: 'octet/stream'});\n\n  const downloadElement = document.getElementById('download') as HTMLAnchorElement;\n  downloadElement.href = window.URL.createObjectURL(blob);\n  downloadElement.download = (options.name || 'route') + '.gpx';\n  downloadElement.click();\n});\n\n(<HTMLInputElement> document.getElementsByName('bogus-time')[0]).addEventListener('change', function() {\n  console.log(this.checked);\n  if(this.checked) {\n    document.getElementById('start-container').classList.remove('hidden');\n  }\n  else {\n    document.getElementById('start-container').classList.add('hidden');\n  }\n});"],"names":["$360d9a9621464d34$export$9099ad97b570f7c","$aa9447dea9a12a8f$export$9099ad97b570f7c","Disposable","this","disposed","prototype","dispose","disposeInternal","$175694b649fdbaa2$export$9099ad97b570f7c","BaseEvent","type","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","$106eee51eb5027f3$export$8eda8fbd1364c8a1","a","b","$106eee51eb5027f3$export$45934da9231b7323","arr","direction","n","length","i","$106eee51eb5027f3$export$1f4f991ce94838ce","begin","end","tmp","$106eee51eb5027f3$export$46e35401bc090c62","data","extension","Array","isArray","$106eee51eb5027f3$export$bcc761834e33d339","arr1","arr2","len1","$e8fe802d0684ce0f$export$ad8dd69aa6772cd0","$e8fe802d0684ce0f$export$5c50afa32081505e","$e8fe802d0684ce0f$export$3850addf0fb4e6a7","$b1c01449f6fb04fd$export$f3c88f5a058bec38","Object","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$b1c01449f6fb04fd$export$97fff7491bd246bd","object","property","$b1c01449f6fb04fd$export$207c30846165e93a","values","push","$b1c01449f6fb04fd$export$988399e568471db1","$5871a677c2d47110$export$9099ad97b570f7c","_super","Target","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$5871a677c2d47110$var$__extends","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$1eec589ef9f03c3a$export$9099ad97b570f7c","$abf34980d1562f58$export$18e1b4ff5b3c2297","Error","$abf34980d1562f58$var$uidCounter_","$abf34980d1562f58$export$604e9536b9e0488a","obj","ol_uid","String","$453e0f55adf2aa98$export$9fbc3b1d6b2da9ec","t","Math","pow","$453e0f55adf2aa98$export$673b9849e2bc032c","$453e0f55adf2aa98$export$1b5c1277e30d397d","$453e0f55adf2aa98$export$5523e35ab8ae283a","$150b5bd0bfcaba04$export$9099ad97b570f7c","Tile","tileCoord","state","opt_options","options","interimTile","transition_","transition","transitionStarts_","$150b5bd0bfcaba04$var$__extends","changed","release","getKey","getInterimTile","tile","getState","refreshInterimChain","prev","getTileCoord","setState","load","getAlpha","id","time","start","delta","inTransition","endTransition","$5871a677c2d47110$exports","default","$2e5310563a29b6d9$var$ua","navigator","userAgent","toLowerCase","$2e5310563a29b6d9$export$543c908bf17a24fb","$2e5310563a29b6d9$export$bccc8605349feea7","$2e5310563a29b6d9$export$f16ffc71033a7aaa","$2e5310563a29b6d9$export$1940d5d2b4cf824d","devicePixelRatio","$2e5310563a29b6d9$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$2e5310563a29b6d9$export$9544418e5c6fedfe","Image","decode","$2e5310563a29b6d9$export$700ce540937d8c69","passive","defineProperty","get","window","error","$e938c51870f186d7$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","document","createElement","width","height","getContext","$e938c51870f186d7$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$e938c51870f186d7$export$47503d53c08beb29","node","removeChild","$244f7fbdc76b1fe6$export$9099ad97b570f7c","ImageBase","extent","resolution","pixelRatio","pixelRatio_","$244f7fbdc76b1fe6$var$__extends","getExtent","getImage","getPixelRatio","getResolution","$2afaec311bc855ad$export$9099ad97b570f7c","$a6e2e0d6d016083d$export$9099ad97b570f7c","$a13b08ece8514024$export$9099ad97b570f7c","$4a6933b8a2a12a45$export$9099ad97b570f7c","AssertionError","code","message","split","name","$4a6933b8a2a12a45$var$__extends","$a93d7950106d9b94$export$b8795f4f643ce74f","assertion","errorCode","$4a6933b8a2a12a45$exports","$4b239fe5fbbd9442$export$a7ecbd362d65c1fe","coordinates","$4b239fe5fbbd9442$export$dbb3d72606cdc11","$4b239fe5fbbd9442$export$2852acc8f8b94686","$4b239fe5fbbd9442$export$14e1765886db335a","value","opt_extent","$4b239fe5fbbd9442$export$d6a0542127b96c83","slice","$4b239fe5fbbd9442$export$c7d6a927f416dd39","x","y","dx","dy","$4b239fe5fbbd9442$export$c422a9fcb5f1ee5c","coordinate","$4b239fe5fbbd9442$export$cc70e7e516e4370f","$4b239fe5fbbd9442$export$4f55e2d709659e7b","extent1","extent2","$4b239fe5fbbd9442$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$4b239fe5fbbd9442$export$ea8082d0226d35a5","$4b239fe5fbbd9442$export$80741250c74fd4fa","$4b239fe5fbbd9442$export$bcc761834e33d339","$4b239fe5fbbd9442$export$4b116deb3079b147","flatCoordinates","offset","stride","$4b239fe5fbbd9442$export$8696fee511ea7c7a","min","max","$4b239fe5fbbd9442$export$c26f7b9c5adc34b4","callback","val","$4b239fe5fbbd9442$export$3932426cd8118930","$4b239fe5fbbd9442$export$4e2fc25ce97f3583","$4b239fe5fbbd9442$export$35aedeaeee8be6cd","$4b239fe5fbbd9442$export$5100f0815ea32995","$4b239fe5fbbd9442$export$ab4e37d31d15614d","area","$4b239fe5fbbd9442$export$988399e568471db1","$4b239fe5fbbd9442$export$3dc3550566517965","$4b239fe5fbbd9442$export$e178c8044d3d0a05","$4b239fe5fbbd9442$export$339e303bf205caae","$4b239fe5fbbd9442$export$38622892ed79bdc7","corner","$4b239fe5fbbd9442$export$3212225221d5bc14","center","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$4b239fe5fbbd9442$export$c491031eb9adcc3a","intersection","$4b239fe5fbbd9442$export$c3bd2c3b798b0350","$4b239fe5fbbd9442$export$76e02248c0889c3e","transformFn","opt_stops","xs","ys","l","apply","$4b239fe5fbbd9442$var$_boundingExtentXYs","$397f0f5ed9a3050c$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","eventsKey","$397f0f5ed9a3050c$export$d2df825b2d8bc2ba","$397f0f5ed9a3050c$export$6dee5fd4fdf600ff","$9d0a6d02ef4dbef8$export$469eb8ba3f45955e","image","loadHandler","errorHandler","img","src","promise","listening_1","then","catch","listenerKeys","forEach","ImageWrapper","crossOrigin","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$9d0a6d02ef4dbef8$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$244f7fbdc76b1fe6$exports","$00b94bfd7801f3c8$export$9099ad97b570f7c","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","$00b94bfd7801f3c8$var$__extends","element","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$9d0a6d02ef4dbef8$exports","listenImage","$150b5bd0bfcaba04$exports","$9e10b55cc3e5aff2$var$Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$9e10b55cc3e5aff2$export$af68584dedf5e52c","PI","$9e10b55cc3e5aff2$export$9099ad97b570f7c","$02080a5168d333d1$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$1cba8f77b2fc8147$export$4b8705656de00c72","$1cba8f77b2fc8147$export$4a376e0f60d976ee","cosh","exp","$1cba8f77b2fc8147$export$e08236045caaa3e1","log2","log","LOG2E","$1cba8f77b2fc8147$export$fd0b1e5ac4df516c","$1cba8f77b2fc8147$export$8b6706701cd75ea9","$1cba8f77b2fc8147$export$11468133b1231643","angleInRadians","$1cba8f77b2fc8147$export$4fc80c88d72f096","angleInDegrees","$1cba8f77b2fc8147$export$3334706ffb3dccb1","r","$1cba8f77b2fc8147$export$45ca8e7f50ccf2e0","$4cdcea7942371c6e$export$bb1f4f75177e5528","$4cdcea7942371c6e$export$6fd015d56b8406c9","$4cdcea7942371c6e$export$64afaa717a0c4932","$4cdcea7942371c6e$export$2126dea64bc40b7b","tan","$4cdcea7942371c6e$var$EPSG3857Projection","EPSG3857Projection","point","$4cdcea7942371c6e$var$__extends","$4cdcea7942371c6e$export$850c9b527a5298aa","$4cdcea7942371c6e$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$4cdcea7942371c6e$export$f361696640082386","atan","$2bd0be18b84525d9$export$6fd015d56b8406c9","$2bd0be18b84525d9$export$af68584dedf5e52c","$2bd0be18b84525d9$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$2bd0be18b84525d9$var$__extends","$2bd0be18b84525d9$export$850c9b527a5298aa","$a9a5e0c6ca2e1695$var$cache","$53c818eff833bb4a$var$transforms","$53c818eff833bb4a$export$568ed88074851180","destination","sourceCode","destinationCode","$617763bc4bd20684$export$9099ad97b570f7c","$dcc53fed7252e62f$export$aec7b6756585c081","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$dcc53fed7252e62f$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$04466ada99459d91$export$33316aa3d2b37c10","opt_fractionDigits","template","replace","toFixed","$04466ada99459d91$export$a5b158389611e45d","$04466ada99459d91$export$65a78249c9b30a6a","$04466ada99459d91$export$bcc761834e33d339","coordinate1","coordinate2","equals","$04466ada99459d91$export$d40e2456b1281660","angle","cosAngle","sinAngle","$04466ada99459d91$export$5a0d9577a24f3c5b","projection","worldWidth","worldsAway","$04466ada99459d91$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$fa384abe43b1f395$export$3fbbaef54e2e9d28","$fa384abe43b1f395$export$678028d364072132","$fa384abe43b1f395$export$6308908a0016f099","$a9a5e0c6ca2e1695$export$568ed88074851180","$fa384abe43b1f395$export$7eb84799c931fe91","projectionLike","$fa384abe43b1f395$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$fa384abe43b1f395$export$747af4f49bde2f53","vertices","$fa384abe43b1f395$export$a42db349809b0c24","projections","$fa384abe43b1f395$export$fd4cd3535c7ea97f","$fa384abe43b1f395$export$f704437a72056fb8","defaultCode","$fa384abe43b1f395$export$13550698a4b6771e","opt_projection","$fa384abe43b1f395$export$4b169b49e1a4823b","$fa384abe43b1f395$export$3002ada1514a585a","lonLat","lon","$fa384abe43b1f395$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transform","$53c818eff833bb4a$export$7eb84799c931fe91","$fa384abe43b1f395$export$9336879ef6599bf5","$fa384abe43b1f395$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$fa384abe43b1f395$var$userProjection","$fa384abe43b1f395$export$352fd07bdd93dc1e","$fa384abe43b1f395$export$4a182a4d53d7595c","$fa384abe43b1f395$export$b5d00774755783fc","destProjection","$fa384abe43b1f395$export$a7d473ff80a6a3b","$fa384abe43b1f395$export$f87215506b474b9e","$4cdcea7942371c6e$exports","PROJECTIONS","$2bd0be18b84525d9$exports","fromEPSG4326","toEPSG4326","$72092921cefc513c$var$brokenDiagonalRendering_","$8d02cc6e51329a90$export$9099ad97b570f7c","Triangulation","sourceProj","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","c","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","ceil","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","d","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","abs","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$7125477b3730d11b$export$5f986e3acaff8610","imageSmoothingEnabled","msImageSmoothingEnabled","$72092921cefc513c$var$drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","save","clip","restore","$72092921cefc513c$var$verifyBrokenDiagonalRendering","$72092921cefc513c$export$fbbff54b3c32db8d","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$72092921cefc513c$export$792a797b69be0d58","triangulation","sources","gutter","opt_renderEdges","opt_contextOptions","context","round","pixelRound","scale","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","drawImage","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","mat","maxRow","maxEl","absValue","j","coef","k","m","$1cba8f77b2fc8147$export$27dc5719ceda6735","getImageData","$72092921cefc513c$var$isBrokenDiagonalRendering","ud","vd","step","steps","translate","strokeStyle","lineWidth","stroke","$938fa94ea91032bd$export$9099ad97b570f7c","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$72092921cefc513c$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$938fa94ea91032bd$var$__extends","reproject_","z","getTileSize","leftToLoad_1","sourceListenKey_1","e","state1","unlistenSources_","setTimeout","$350327925a545431$export$9099ad97b570f7c","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","clear","containsKey","f","entry","value_","key_","newer","older","remove","getKeys","getValues","peekLast","peekLastKey","peekFirstKey","pop","set","setSize","$298e07180ebbc18c$export$ea8082d0226d35a5","opt_tileCoord","$298e07180ebbc18c$export$1039fb0288fd71e3","$298e07180ebbc18c$export$a0f0ccbe5bbc0789","$b8c0af040d9dc0fe$export$9099ad97b570f7c","TileCache","$b8c0af040d9dc0fe$var$__extends","expireCache","usedTiles","pruneExceptNewestZ","map","Number","$298e07180ebbc18c$export$5208a752d34424e5","$1e36dd0d5814997b$export$9099ad97b570f7c","$3dc3825e79de4e26$export$9099ad97b570f7c","$c022d33ed6bb5ca2$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$c022d33ed6bb5ca2$var$__extends","getRevision","len","ol_key","$c022d33ed6bb5ca2$export$21f63b82add5980c","$c022d33ed6bb5ca2$export$9099ad97b570f7c","$8f7fdb7cfb75e879$export$b902cfd711fa7f06","ObjectEvent","oldValue","$8f7fdb7cfb75e879$var$__extends","$8f7fdb7cfb75e879$export$9099ad97b570f7c","BaseObject","opt_values","values_","setProperties","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$c022d33ed6bb5ca2$exports","$a979859450d27aab$export$9099ad97b570f7c","$2317568ccbc72da2$var$adaptAttributions","attributionLike","frameState","$2317568ccbc72da2$export$9099ad97b570f7c","Source","attributions_","attributions","attributionsCollapsible_","attributionsCollapsible","loading","state_","wrapX_","wrapX","$2317568ccbc72da2$var$__extends","getAttributions","getAttributionsCollapsible","getProjection","getResolutions","getWrapX","getContextOptions","refresh","setAttributions","$8f7fdb7cfb75e879$exports","$848a86622bea988b$var$TileRange","TileRange","contains","containsXY","containsTileRange","tileRange","extend","getHeight","getSize","getWidth","intersects","$848a86622bea988b$export$ea8082d0226d35a5","$848a86622bea988b$export$9099ad97b570f7c","$3f0417c20d1cc4a3$export$c563c2b7121f8771","$3f0417c20d1cc4a3$export$48d31d2725e4d98b","opt_size","$ec3aa58fac71f355$var$tmpTileCoord","$ec3aa58fac71f355$export$9099ad97b570f7c","TileGrid","opt_strict","compare","zoomFactor","minZoom","resolutions_","resolutions","every","currentVal","res","origins","zoomFactor_","maxZoom","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","zoom","jj","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getMaxZoom","getMinZoom","getOrigin","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","factor","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","$cb780d18f7933e5c$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$cb780d18f7933e5c$var$resolutionsFromExtent","$cb780d18f7933e5c$export$57c49ef1657592d4","$cb780d18f7933e5c$export$9666e825b22d806d","$cb780d18f7933e5c$export$6dfef52f91d4f582","opt_maxResolution","maxResolution","half","$824311a81ea848b7$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","$b8c0af040d9dc0fe$exports","cacheSize","tmpSize","tileOptions","zDirection","$824311a81ea848b7$var$__extends","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","ratio","getTileCoordForTileUrlFunction","$cb780d18f7933e5c$export$5a0d9577a24f3c5b","$298e07180ebbc18c$export$b46b80619528d4e5","updateCacheSize","tileCount","useTile","$2317568ccbc72da2$exports","$824311a81ea848b7$export$8434c8db61edbf9d","TileSourceEvent","$824311a81ea848b7$export$9099ad97b570f7c","$88df26af4a8f1ef6$export$ee162149bf998c0f","zRegEx","xRegEx","yRegEx","dashYRegEx","toString","range","$88df26af4a8f1ef6$export$2d2faeb2e9d58b93","templates","tileUrlFunctions","$298e07180ebbc18c$export$4639c7f2947f4458","$88df26af4a8f1ef6$export$c6a04e0c49b28953","$1dbd919805fd1d18$export$9099ad97b570f7c","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","$1dbd919805fd1d18$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","handleTileChange","uid","tileState","$824311a81ea848b7$exports","setTileLoadFunction","setTileUrlFunction","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop_1","parseInt","$88df26af4a8f1ef6$export$47abe479fba0e55d","join","$505aa269794a499f$var$defaultTileLoadFunction","imageTile","$505aa269794a499f$export$9099ad97b570f7c","TileImage","tileClass","$00b94bfd7801f3c8$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$505aa269794a499f$var$__extends","usedTileCache","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","cache","newTile","$938fa94ea91032bd$exports","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","render","setTileGridForProjection","tilegrid","proj","$1dbd919805fd1d18$exports","$72436993edd2ca04$export$9099ad97b570f7c","XYZ","xyzOptions","gridOptions","$cb780d18f7933e5c$export$5731532c605ee56","$72436993edd2ca04$var$__extends","$505aa269794a499f$exports","$e418fa376f25023c$export$bd9c1867755cf54e","$e418fa376f25023c$export$9099ad97b570f7c","OSM","$e418fa376f25023c$var$__extends","$72436993edd2ca04$exports","$6074b396fc14353d$export$7cf753b6a6534915","styles_1","getZIndex","$6074b396fc14353d$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","$6074b396fc14353d$var$__extends","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","setId","$ea4701d35a7bcfcb$var$transformStringDiv","$ea4701d35a7bcfcb$export$77f8d2fc923b14e3","$ea4701d35a7bcfcb$export$6af9bbf310c9e4bf","$ea4701d35a7bcfcb$export$452ae967caf14641","dx1","dy1","sx","sy","dx2","dy2","$ea4701d35a7bcfcb$export$6e6aac0f60e83c70","det","$ea4701d35a7bcfcb$export$47bee913e0e80eb4","transformString","$4a3eb4cf07e68bcb$var$HEX_COLOR_RE_","$4a3eb4cf07e68bcb$var$NAMED_COLOR_RE_","$4a3eb4cf07e68bcb$export$9fe004474d6f7f65","color","$4a3eb4cf07e68bcb$export$47bee913e0e80eb4","$4a3eb4cf07e68bcb$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","$4a3eb4cf07e68bcb$export$21528ce64591bf2","s","g","hasAlpha","substr","$4a3eb4cf07e68bcb$export$2e33abec8aecd572","$4a3eb4cf07e68bcb$var$fromStringInternal_","$4a3eb4cf07e68bcb$export$7266a24c0caa2a8","$e2ca19531263975f$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","$e2ca19531263975f$var$getKey","maxCacheSize","$e2ca19531263975f$export$601b9e2be44c7cb2","$b20feb8964318d3f$export$9099ad97b570f7c","$a91eb7d9c06d6003$export$9099ad97b570f7c","BaseLayer","opacity","visible","zIndex","minResolution","className_","className","$a91eb7d9c06d6003$var$__extends","getClassName","getLayerState","opt_managed","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getLayersArray","opt_array","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$782b75247205ab14$export$9099ad97b570f7c","$c8891acc328b159c$export$16970faadcd3f29b","layerState","viewState","$c8891acc328b159c$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","setMap","handleSourcePropertyChange_","setSource","$c8891acc328b159c$var$__extends","array","states","getSource","handleSourceChange_","getFeatures","pixel","Promise","resolve","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$a91eb7d9c06d6003$exports","$23233cffd63dbe95$var$expireIconCache","$23233cffd63dbe95$export$9099ad97b570f7c","MapRenderer","map_","$23233cffd63dbe95$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","$c8891acc328b159c$exports","inView","callback_1","order","i1","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$ffba12b1b1caac35$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","$ffba12b1b1caac35$var$__extends","$eb83c055c71b92dc$var$fontRegEx","RegExp","$eb83c055c71b92dc$var$fontRegExMatchIndex","$eb83c055c71b92dc$export$b705256ab57c20ca","fontSpec","lineHeight","weight","variant","families","family","$3f8842a01a05d29f$export$6ad0413f8fea3c71","$3f8842a01a05d29f$export$70c5a077e5d6beb9","$3f8842a01a05d29f$export$907cf5cff4a8acb1","console","warn","$3f8842a01a05d29f$var$measureFont","measureElement","$3f8842a01a05d29f$var$measureContext","$3f8842a01a05d29f$export$384c0f09c94ed6cc","$3f8842a01a05d29f$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$3f8842a01a05d29f$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$3f8842a01a05d29f$export$a2bf16790cd8f004","metrics","$3f8842a01a05d29f$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$3f8842a01a05d29f$export$4b2ca35321179b27","$3f8842a01a05d29f$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","globalAlpha","setTransform","contextInstructions","label","$3f8842a01a05d29f$var$executeLabelInstructions","$de107509ffcc1e1e$export$9099ad97b570f7c","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$eb83c055c71b92dc$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$de107509ffcc1e1e$var$__extends","event_1","$ffba12b1b1caac35$exports","declutterLayers","previousElement","layerIndex","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$e938c51870f186d7$export$439ebc2b0f0ec9f4","getDataAtPixel","$23233cffd63dbe95$exports","$b22fe65cc2091c4a$export$9099ad97b570f7c","$c8bee1b3aeb9d79e$var$Property","$c8bee1b3aeb9d79e$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$c8bee1b3aeb9d79e$var$__extends","$c8bee1b3aeb9d79e$export$9099ad97b570f7c","Collection","unique_","unique","array_","assertUnique_","updateLength_","getLength","getArray","item","insertAt","elem","removeAt","setAt","opt_except","$3bf57b305f2befe1$var$Property","$3bf57b305f2befe1$export$9099ad97b570f7c","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$c8bee1b3aeb9d79e$exports","setLayers","$3bf57b305f2befe1$var$__extends","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$cd0dc31bb7f07bd8$export$9099ad97b570f7c","MapEvent","$cd0dc31bb7f07bd8$var$__extends","$d4f51dc221fadaed$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$d4f51dc221fadaed$var$__extends","getEventPixel","getCoordinateFromPixel","$cd0dc31bb7f07bd8$exports","$a406e3695e3399d9$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$a69469b84400a522$export$9099ad97b570f7c","$85c0a5b12bf0966d$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$85c0a5b12bf0966d$var$__extends","emulateClick_","pointerEvent","newEvent","$d4f51dc221fadaed$exports","clearTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$9dc1c4328cbd3b30$export$9099ad97b570f7c","$a2f92f24bac5651c$export$9099ad97b570f7c","$9ea30a2172af1cde$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$5e7cdcfae3171aaa$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$5e7cdcfae3171aaa$var$__extends","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","$5e7cdcfae3171aaa$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","$2856fbf609c8d5d1$export$9099ad97b570f7c","$8b00b5310669c7ed$export$9099ad97b570f7c","$00d39586d2dd894f$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","$00d39586d2dd894f$export$eaafe0fae18e32b1","$e1ddb1e9ae31ae02$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$e1ddb1e9ae31ae02$var$getSmoothClampedResolution","$e1ddb1e9ae31ae02$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$a18de7eaf14a0b33$export$e97ec87d2336bd4e","$a18de7eaf14a0b33$export$eaafe0fae18e32b1","$adef5d18c3ab54fd$export$9099ad97b570f7c","$49a9dfb608ce5f95$export$92106241c01aa541","opt_dest","dest","$49a9dfb608ce5f95$export$d40e2456b1281660","anchor","anchorX","anchorY","$ba41d9b80f779606$var$tmpTransform","$ba41d9b80f779606$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","applyTransform","nextArgs","$ba41d9b80f779606$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$4b239fe5fbbd9442$export$d1e01ccfd06bf8ee","rotate","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$7e268a797fd34dbd$export$2a65008b73824080","layout","$7e268a797fd34dbd$export$36912b83e488cd77","simpleGeometry","getFlatCoordinates","getStride","$7e268a797fd34dbd$export$9099ad97b570f7c","SimpleGeometry","$7e268a797fd34dbd$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$7e268a797fd34dbd$var$getLayoutForStride","$49a9dfb608ce5f95$export$8f869025bba9609b","$49a9dfb608ce5f95$export$41b0d7466cde8385","$ba41d9b80f779606$exports","$40f507b383da395e$var$assignClosest","offset1","offset2","$40f507b383da395e$export$acf7548d1f0e8581","squaredDelta","$40f507b383da395e$export$ba38095f6bb45df2","ends","$40f507b383da395e$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$40f507b383da395e$export$3dd3914e22f9012e","$6cb5b4913a2f0936$export$e175f505890ac90f","$6cb5b4913a2f0936$export$ab1a51db55485752","coordinatess","opt_ends","$d043153e418ded33$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$d043153e418ded33$export$383ea8a1f2974dfb","$d043153e418ded33$export$e29de4fdb2175738","$d043153e418ded33$export$1df19a1eb5514c2f","simplifiedEnds","$3185dd1b8645ed57$export$92f32d891164b0ac","opt_coordinates","$3185dd1b8645ed57$export$d82a8a3167f968d","opt_coordinatess","$3185dd1b8645ed57$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$40a616a92c640fdd$export$9bf2059fd656d5e9","twiceArea","$40a616a92c640fdd$export$99cb92d00fd73c87","$43c0695b48c31937$export$9099ad97b570f7c","LinearRing","maxDelta_","maxDeltaRevision_","$43c0695b48c31937$var$__extends","getArea","$7e268a797fd34dbd$exports","$fd187036c4ad2ec2$export$9099ad97b570f7c","Point","$fd187036c4ad2ec2$var$__extends","$6cb5b4913a2f0936$export$a53e62528b652807","$7b5592c4b91a07ed$export$f7b55b637f92fd7","$7b5592c4b91a07ed$export$e2ed757909b25f63","wn","$7b5592c4b91a07ed$export$51e46a3625992b91","$b9b67588a55982e7$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$1c34f05d540d121d$export$40f3d9558cf6e846","ret","point1","point2","$76e31ee9dbbe302d$export$26f047a5bfac4b1a","coordinatesExtent","startRel","endRel","startX","startY","endX","endY","slope","$4b239fe5fbbd9442$export$525a75abb91115e3","$76e31ee9dbbe302d$export$717c2c7c46a5bf3d","$76e31ee9dbbe302d$export$f14bd9270666b480","$32fb60cc2618c78c$export$c77fe031a1447f2e","$ee95668e612b360f$export$add61ad31d0a68b4","edge","$ee95668e612b360f$export$586adaf930d9fdb6","opt_right","right","isClockwise","$ee95668e612b360f$export$325e57738fd8b321","$67ee9fdd559ae60e$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$67ee9fdd559ae60e$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$fd187036c4ad2ec2$exports","getLinearRingCount","getLinearRing","$43c0695b48c31937$exports","getLinearRings","linearRings","$67ee9fdd559ae60e$export$9099ad97b570f7c","$67ee9fdd559ae60e$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$67ee9fdd559ae60e$export$b50d271c6e9656cd","$67ee9fdd559ae60e$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$67ee9fdd559ae60e$export$5d1798f0e1df079","getRadius","startAngle","$4d09fd224bce9aac$var$animationCallback","returnValue","$4d09fd224bce9aac$export$535fae5a159fbda4","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$4d09fd224bce9aac$export$8b6914b45b83f21f","resolutionConstraint","smoothResolutionConstraint","projExtent","constrainResolution","capped","$e1ddb1e9ae31ae02$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","$e1ddb1e9ae31ae02$export$7690ad4e930f454b","constraint","$4d09fd224bce9aac$export$9665b691bc2d5ca0","theta","opt_tolerance","enableRotation","constrainRotation","$4d09fd224bce9aac$export$5d87c27d7d9f380e","animation","sourceRotation","targetRotation","$4d09fd224bce9aac$var$calculateCenterOn","rotX","rotY","$4d09fd224bce9aac$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","$4d09fd224bce9aac$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","padding_","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nearest","baseLevel","fit","geometryOrExtent","$67ee9fdd559ae60e$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","targetRes","$7f90c67a94ff7584$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$3bf57b305f2befe1$exports","view","$4d09fd224bce9aac$exports","$7f90c67a94ff7584$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$5e7cdcfae3171aaa$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","$7f90c67a94ff7584$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","$85c0a5b12bf0966d$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","setLayerGroup","setView","computedStyle","offsetWidth","parseFloat","$8f4a601d9be32279$export$9099ad97b570f7c","Control","target_","$8f4a601d9be32279$var$__extends","mapEvent","$061c199bdbf67255$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$061c199bdbf67255$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","updateElement_","lastChild","$e938c51870f186d7$export$f0994cfd84ab1152","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$8f4a601d9be32279$exports","$c0271bd4f0f131b5$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$c0271bd4f0f131b5$var$__extends","resetNorth_","$a099fe81d7933b1b$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$a099fe81d7933b1b$var$__extends","zoomByDelta_","currentZoom","newZoom","$06de79b7d69b8d4c$export$9099ad97b570f7c","MousePosition","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","setProjection","renderOnMouseOut","placeholder","undefinedHTML","placeholder_","renderOnMouseOut_","renderedHTML_","mapProjection_","transform_","$06de79b7d69b8d4c$var$__extends","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","viewport","format","html","$f7cb501f3d928778$export$9d6d462c9b8add1e","IMPERIAL","NAUTICAL","METRIC","US","$f7cb501f3d928778$var$LEADING_DIGITS","$f7cb501f3d928778$export$9099ad97b570f7c","ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","dpi","$f7cb501f3d928778$var$__extends","setDpi","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","decimal","createScaleBar","mapScale","getScaleForResolution","toLocaleString","scaleSteps","stepWidth","backgroundColor","createMarker","createStepText","isLast","lengthString","mpu","$13a1392888651e7b$export$9099ad97b570f7c","ZoomToExtent","$13a1392888651e7b$var$__extends","handleZoomToExtent","$070ebaa1cd5f7208$export$b403fbac94228e09","$a099fe81d7933b1b$exports","zoomOptions","$c0271bd4f0f131b5$exports","rotateOptions","attribution","$061c199bdbf67255$exports","attributionOptions","$9b8240cd930c7251$export$9099ad97b570f7c","$cc7ed3d15f79f09e$export$63568b31cb17dd4d","$cc7ed3d15f79f09e$export$d2c07614bfd6a817","$cc7ed3d15f79f09e$export$9099ad97b570f7c","Interaction","setActive","$cc7ed3d15f79f09e$var$__extends","active","$05d04f741d9f44ea$export$9099ad97b570f7c","DoubleClickZoom","delta_","$05d04f741d9f44ea$var$__extends","stopEvent","shiftKey","$cc7ed3d15f79f09e$exports","zoomByDelta","$4e21594aff042ad9$export$e61edea4dfe4ed9b","$4e21594aff042ad9$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$4e21594aff042ad9$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$4e21594aff042ad9$var$isPointerDraggingEvent","$719344b2915a5282$export$8dbdea330bbd6b3c","conditions","pass","$719344b2915a5282$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$719344b2915a5282$export$584a07df7b145c47","hasAttribute","activeElement","$719344b2915a5282$export$363947888fb85da6","$719344b2915a5282$export$a8612972eacfc116","$719344b2915a5282$export$9f5e19851eeaf2c1","$719344b2915a5282$export$1734dfcac3c09b2f","$719344b2915a5282$export$59c8376875f673f8","$719344b2915a5282$export$5bbcce8021828272","tagName","$719344b2915a5282$export$d31d3f3aa38542a8","pointerType","$719344b2915a5282$export$45cd27c0322d6513","isPrimary","$30483e29507706cc$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$30483e29507706cc$var$__extends","centroid","$4e21594aff042ad9$exports","update","getDistance","getAngle","centerpx","$fba38e1bcb241519$export$9099ad97b570f7c","DragRotate","lastAngle_","$fba38e1bcb241519$var$__extends","$aceb96e89d56f634$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$aceb96e89d56f634$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","$20cb6644c41e6461$var$DragBoxEventType","$20cb6644c41e6461$export$4d9b552836937ca2","DragBoxEvent","$20cb6644c41e6461$var$__extends","$20cb6644c41e6461$export$9099ad97b570f7c","DragBox","box_","$aceb96e89d56f634$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$c82213a35099ea60$export$9099ad97b570f7c","DragZoom","out_","out","$c82213a35099ea60$var$__extends","$20cb6644c41e6461$exports","$b33346ced3ffa1bb$export$9099ad97b570f7c","$a55d85978dd11fe1$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$a55d85978dd11fe1$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$231d0cdbd522b255$export$9099ad97b570f7c","KeyboardZoom","$231d0cdbd522b255$var$__extends","$49ab15a508fcdc65$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$3750bcddcbf4c872$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$3750bcddcbf4c872$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$3750bcddcbf4c872$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$6a2e253f5cb0bc62$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$6a2e253f5cb0bc62$var$__extends","rotationDelta","touch0","touch1","$9dd5b3aa2e054d06$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$9dd5b3aa2e054d06$var$__extends","scaleDelta","$a9d71ecad6ede6f8$export$9099ad97b570f7c","Map1","altShiftDragRotate","$fba38e1bcb241519$exports","doubleClickZoom","$05d04f741d9f44ea$exports","zoomDelta","zoomDuration","dragPan","$30483e29507706cc$exports","pinchRotate","$6a2e253f5cb0bc62$exports","pinchZoom","$9dd5b3aa2e054d06$exports","keyboard","$a55d85978dd11fe1$exports","$231d0cdbd522b255$exports","mouseWheelZoom","$3750bcddcbf4c872$exports","shiftDragZoom","$c82213a35099ea60$exports","$7251b9d3abaab321$export$b403fbac94228e09","$a9d71ecad6ede6f8$var$__extends","$de107509ffcc1e1e$exports","$7f90c67a94ff7584$exports","$8c10c901171144f0$export$55be7a9e3fef4787","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$106eee51eb5027f3$export$26b1c556c0e0f127","$8c10c901171144f0$export$1a804b04fa5a0253","extrapolate","lo","hi","m0","$2c5e6ed7a2421d9f$export$7326ac1b36a49776","$7646f09864b67151$export$9099ad97b570f7c","LineString","flatMidpoint_","flatMidpointRevision_","$7646f09864b67151$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","$d9384f01d604a2a6$export$9099ad97b570f7c","$87fb90d07b93a774$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$87fb90d07b93a774$var$__extends","getPreload","getUseInterimTilesOnError","$7971363be443bf07$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$7971363be443bf07$var$__extends","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","imageState","$d3c91b778f21fae8$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$d3c91b778f21fae8$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","err","Uint8Array","$7971363be443bf07$exports","$0704a0db83121540$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$0704a0db83121540$var$__extends","isDrawableTile","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","canvasTransform","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alpha","alphaChanged","postRenderFunction","tileSource1","frameState1","opt_tileCallback","$d3c91b778f21fae8$exports","$0704a0db83121540$export$9099ad97b570f7c","$adffffba3f1e99ac$export$9099ad97b570f7c","TileLayer","$adffffba3f1e99ac$var$__extends","$0704a0db83121540$exports","$87fb90d07b93a774$exports","$62cad3baa594a7e9$exports","t1","t2","r1","e1","a1","h1","u","p","_maxEntries","_minEntries","n1","leaf","m2","h2","o1","all","_all","search","toBBox","o2","collides","a2","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","f1","_condense","compareMinX","compareMinY","toJSON","fromJSON","e2","f2","m1","_chooseSubtree","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","d1","v","M","_allDistMargin","define","amd","RBush","$e12c8bb44acdd73c$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getHitDetectionImage","getImageState","getImageSize","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$b30624b926c21759$export$55029509b82b2e2b","$1930bd353b5dd973$export$9099ad97b570f7c","RegularShape","hitDetectionCanvas_","fill_","fill","points","radius_","radius1","radius2_","radius2","stroke_","size_","renderOptions_","$1930bd353b5dd973$var$__extends","getFill","getPoints","getRadius2","getStroke","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","angle0","radiusC","$bf4e1aa287034bcd$export$9099ad97b570f7c","CircleStyle","$bf4e1aa287034bcd$var$__extends","setRadius","$1930bd353b5dd973$exports","$2977a884eb0897b3$export$9099ad97b570f7c","Fill","color_","setColor","$2051e0d06771d465$export$9099ad97b570f7c","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$2bbb9f7aac5f2c94$var$Style","Style","geometryFunction_","$2bbb9f7aac5f2c94$var$defaultGeometryFunction","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setStroke","setText","$2bbb9f7aac5f2c94$var$defaultStyles","$2bbb9f7aac5f2c94$export$33d0043adf82cc14","$bf4e1aa287034bcd$exports","$2bbb9f7aac5f2c94$export$9099ad97b570f7c","$94242b274ad2f2ed$var$Property","$94242b274ad2f2ed$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$94242b274ad2f2ed$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","setRenderOrder","renderOrder","styleFunction","$2bbb9f7aac5f2c94$export$4aaa4bacaec09e94","$df0635a74a7822e1$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$df0635a74a7822e1$export$c649c04369bd3370","$df0635a74a7822e1$export$2513c58bc344fc5c","$df0635a74a7822e1$export$84e3c67fd41b07f5","$df0635a74a7822e1$export$6cd4b1e0c0e7240c","$df0635a74a7822e1$export$9099ad97b570f7c","$4d95c64ce828af6b$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$602faaef6592ac32$export$9099ad97b570f7c","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$602faaef6592ac32$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$1629b032c2c05b7a$export$9099ad97b570f7c","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$1629b032c2c05b7a$var$__extends","myBegin","opt_sharedData","hitDetectionImage","$602faaef6592ac32$exports","$8503ee84237976ea$export$9099ad97b570f7c","CanvasLineStringBuilder","$8503ee84237976ea$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$0537f4f8a36c0b60$export$9099ad97b570f7c","CanvasPolygonBuilder","$0537f4f8a36c0b60$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$4f3943dd3f2f8692$export$9099ad97b570f7c","$cc27ec6f48b585fa$export$e8c34bbbade92a3a","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$d4f3e170528ef1db$export$3964e67694391753","$d4f3e170528ef1db$export$9099ad97b570f7c","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$d4f3e170528ef1db$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$ad370384483cb7cc$var$BATCH_CONSTRUCTORS","$0537f4f8a36c0b60$exports","$1629b032c2c05b7a$exports","$8503ee84237976ea$exports","$d4f3e170528ef1db$exports","$ad370384483cb7cc$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$e33d80fd92b6dc93$export$9099ad97b570f7c","$2ec7b6c5a4a595c6$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","chars","substring","$fbecb62010b6a32d$var$tmpExtent","$fbecb62010b6a32d$var$p1","$fbecb62010b6a32d$var$p2","$fbecb62010b6a32d$var$p3","$fbecb62010b6a32d$var$p4","$fbecb62010b6a32d$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$fbecb62010b6a32d$var$rtlRegEx","$fbecb62010b6a32d$var$horizontalTextAlign","align","test","TEXT_ALIGN","$fbecb62010b6a32d$export$9099ad97b570f7c","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$3f8842a01a05d29f$export$ba197a5e917e3183","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","ii_1","execute","executeHitDetection","$93b70df51285fcd1$var$ORDER","$93b70df51285fcd1$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$93b70df51285fcd1$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$93b70df51285fcd1$export$f610334c339a4991","featureCallback","imageData","idx","result_1","executor","opt_builderTypes","builderTypes","$93b70df51285fcd1$export$9099ad97b570f7c","$699b1a7f567cffb4$export$9099ad97b570f7c","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$699b1a7f567cffb4$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$7be39e8ef53520fe$export$9099ad97b570f7c","$58814494b0ffc538$export$9099ad97b570f7c","$e40ce0ac0e40cff8$var$taintedTestContext","$e40ce0ac0e40cff8$var$IconImage","IconImage","imageState_","tainted_","$e40ce0ac0e40cff8$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","$e40ce0ac0e40cff8$export$7eb84799c931fe91","$e3932ef79b782730$export$9099ad97b570f7c","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize","iconImage_","$e40ce0ac0e40cff8$exports","offset_","offsetOrigin_","offsetOrigin","$e3932ef79b782730$var$__extends","setAnchor","iconImageSize","$73cf95c6d003b56f$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$73cf95c6d003b56f$export$65a5cfeed6fd0c33","feature1","feature2","$73cf95c6d003b56f$export$f0ea347488340e3d","$73cf95c6d003b56f$export$522dfd100dd96ba1","$73cf95c6d003b56f$var$renderGeometry","$73cf95c6d003b56f$var$renderFeatureInternal","getGeometries","$b2ab5ea43be4855f$export$9099ad97b570f7c","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$b2ab5ea43be4855f$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$ea4701d35a7bcfcb$export$e7468c0ae08395df","clipped","transforms","$699b1a7f567cffb4$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$e3932ef79b782730$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$ce4b2e7cdf1ad653$export$9fd146a6491490e3","resultFeatures","$ce4b2e7cdf1ad653$export$57fd269e987b81b8","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","loadExtent","$4b239fe5fbbd9442$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","loadFeatures","$73cf95c6d003b56f$export$f3b3f9822f340683","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$d16efd1165653604$export$9099ad97b570f7c","VectorLayer","$d16efd1165653604$var$__extends","$b2ab5ea43be4855f$exports","$94242b274ad2f2ed$exports","$971276aecb1c0996$export$9099ad97b570f7c","opt_maxEntries","rbush_","items_","extents","items","getAll","getInExtent","bbox","forEach_","forEachInExtent","concat","rbush","$860c7bb87df2949a$export$9099ad97b570f7c","$5de5d36893087699$export$8dbdea330bbd6b3c","$2c6eefd9d65aa1d3$export$9099ad97b570f7c","$5f956e0dd2b94819$var$withCredentials","$5f956e0dd2b94819$export$52988233cf090939","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$5f956e0dd2b94819$export$4355fa6d12274ca5","dataProjection","addFeatures","$e56c3ef950abbf44$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$e56c3ef950abbf44$var$__extends","$e56c3ef950abbf44$export$9099ad97b570f7c","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","$43b808e5eb0e60da$var$EDITOR_LINE_STYLE","$43b808e5eb0e60da$var$EDITOR_POINTS_STYLE","$43b808e5eb0e60da$var$EDITOR_POINTS_PREVIOUS_STYLE","$43b808e5eb0e60da$var$app","resetEditor","editorPoints","previousPointIndex","draggingPointIndex","updateDisplay","setInteractions","controlInteractions","editor","click","editorPointsLayerSource","addPoint","dblclick","rightclick","removePreviousPoint","pointerdown","findIndex","setPreviousPointStyle","pointerup","pointerdrag","moveDraggingPoint","ref","_editor","updateTotalDistances","dataPoint","totalDistance","nextPointDistance","mapDataPoint","previousMapDataPoint","nextMapDataPoint","setEditorPath","setDistanceText","editorLineFeature","$6074b396fc14353d$exports","reversePath","reversed","initEditor","cancelEditor","loadGPX","fileContents","ref1","xmlDoc","getElementsByTagName","formElement","oldPoints","oldPreviousPointIndex","oldName","trkpt","getAttribute","editorLineLayerSource","alert","createGPX","timeRegex","implementation","createDocument","gpxElement","setMilliseconds","bogusTime","toISOString","trkElement","trksegElement","trkptElement","seconds","getTime","XMLSerializer","serializeToString","routeLayerSource","$e56c3ef950abbf44$exports","selectedLayerSource","$7646f09864b67151$exports","mapSource","$e418fa376f25023c$exports","$a9d71ecad6ede6f8$exports","$06de79b7d69b8d4c$exports","$f7cb501f3d928778$exports","$13a1392888651e7b$exports","$adffffba3f1e99ac$exports","$d16efd1165653604$exports","reader","FileReader","event1","readAsText","files","$43b808e5eb0e60da$var$formElement","ev","checked","blob","Blob","downloadElement","href","URL","createObjectURL","download","getElementsByName"],"version":3,"file":"index.3a9948f4.js.map"}